@model eCademy.NUh16.PhotoShare.Models.ImageViewModel
@{
    ViewBag.Title = "View";
    const int MaxRating = 5;
    var username = "@" + Model.Username;
}

@Html.HiddenFor(model => model.Id)
<h2>@Model.Title</h2>
<div>
    <a href="#">
        <h4 class="username">
            @Html.Gravatar(Model.Email, 32)
            @Html.ActionLink(username, "Index", "User", new { Username = Model.Username }, null)
        </h4>
    </a>
    <hr />
    <div class="container">
        <div class="row">
            <div id="image" class="col-sm-8">
                <img class="img-responsive" src="@Model.Base64Image" alt="@Model.Title" />
            </div>
            <div id="details" class="col-sm-4">
                <div class="row">
                    <div class="col-xs-8">
                        <div>
                            Score: <span class="score">@Model.Score.ToString("0.0")</span>
                        </div>
                        <span class="rating">
                            @for (int i = 1; i < MaxRating + 1; i++)
                            {
                                if (i <= Model.Rating)
                                {<span data-rating="@i" class="star glyphicon glyphicon-star"></span>}
                                else
                                {<span data-rating="@i" class="star glyphicon glyphicon-star-empty"></span>}
                            }
                            <span class="info pull-right">Click to rate!</span>
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts {
    <script>
        $(function () {
            var id = '@Model.Id';

            function updateScore(score) {
                $("#details span.score").html(score.toFixed(1));
            }
            function updateRating($element) {
                //Set filled stars up to user rating
                $element
                    .prevAll('.star')
                    .addBack()
                    .removeClass('glyphicon-star glyphicon-star-empty')
                    .addClass('glyphicon-star');

                //Set empty stars above user rating
                $element
                    .nextAll('.star')
                    .removeClass('glyphicon-star glyphicon-star-empty')
                    .addClass('glyphicon-star-empty');

            }

            $('.rating > span[data-rating]').on('click', function (element, b, c) {
                var $element = $(element.target);
                var data = $element.data();


                var id = $('#Id').val();
                $.ajax({
                    method: 'PUT',
                    url: '/Images/' + id + '/rate/' + data.rating
                }).then(
                    function (data) {
                        console.log(data.NewScore);
                        updateRating($element);
                        updateScore(data.NewScore);
                    },
                    function (error) {
                        console.error(error)
                    }
                )
            })

        });
    </script>
}
